name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["", "async"]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy (lib and bin only)
      run: |
        if [ -n "${{ matrix.features }}" ]; then
          cargo clippy --lib --bins --features ${{ matrix.features }} -- -D warnings
        else
          cargo clippy --lib --bins -- -D warnings
        fi

    - name: Run clippy on tests (warnings only)
      run: |
        if [ -n "${{ matrix.features }}" ]; then
          cargo clippy --tests --features ${{ matrix.features }} || true
        else
          cargo clippy --tests || true
        fi

    - name: Run tests
      run: |
        if [ -n "${{ matrix.features }}" ]; then
          cargo test --all --features ${{ matrix.features }}
        else
          cargo test --all
        fi

    - name: Test CLI tools
      run: |
        cargo build --all
        ./target/debug/unity-asset --help
        if [ "${{ matrix.features }}" = "async" ]; then
          cargo build --features async -p unity-asset-cli
          ./target/debug/unity-asset-async --help
        fi

  # 只在main分支运行文档检查，避免PR中的噪音
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-doc-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-doc-
          ${{ runner.os }}-cargo-

    - name: Check documentation
      run: cargo doc --all --all-features --no-deps



  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
